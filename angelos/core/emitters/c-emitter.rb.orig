import emitter
class NativeCEmitter < Emitter
  # def if_then_else(context, node):
  #   call(:checkCondition)
  # 
  def setter(var, val):
<<<<<<< HEAD
    if var.owner #??:
      "VALUE #{var.name}=set_property(#{var.owner},#{var},#{val});"
    else
      "VALUE #{var.name}=set(#{var.name.quoted},#{val.wrap});"


  def emit_method_call(obj,meth,params,native=false):
    set=EnglishParser.self_modifying(meth) ? obj.name+"=result=" :"result="
    if native  # static_cast<int> etc: return "#{set}#{meth}(#{params.values});"
    if not obj and params.empty?: return "#{set}call(Object,#{meth.id},0);"
    if params.empty?: return "#{set}call(#{obj.name},#{meth.id},0);"
    if not obj: return "#{set}call(Object,#{meth.id},#{params.count},#{params.values});"
    return "#{set}call(#{obj.name},#{meth.id},#{params.count},#{params.values});"

=======
    if var.owner:
      "set_property(#{var.owner},#{var},#{val});"
    else
      "set(#{var.name.quoted},#{val.wrap});"


>>>>>>> 90f860157deaaec63e50c2c1e3ff703d4656df14
  def call(obj, meth, args):
    "call(#{obj},#{meth},#{args});"

  def emit( interpretation, do_run=false):
<<<<<<< HEAD
    self.file=File("/tmp/emitted.c","w") #IO.open
    self.file.write("#include \"helpers.c\"\n")
    self.file.write("VALUE run(VALUE arg){\n")
    #  descend through Parent class emitter, Overwrite functions
    descend  interpretation, interpretation.root
    self.file.write("return result;\n");
    self.file.write("}")
    self.file.close
    `rm /tmp/main;`
    include=" -I$RUBY_DEV_HOME/.ext/include/x86_64-darwin13.2.0/ "
    include+=" -I$ENGLISH_SCRIPT_HOME/src/core/emitters/ " #helpers.c
    include+=" -I$RUBY_DEV_HOME/include "
    command="gcc -g -Iruby #{include} -lruby /tmp/emitted.c -o /tmp/main"
    puts "\n\n"+command
    ok=`#{command}`
    # puts STDERR.methods
    if $?.exitstatus==1:
      puts "ERROR COMPILING!"
      exit!

    puts ok
    if do_run: result=`/tmp/main`
    result.strip

=======
    self.file=File("emitted.c","w") #IO.open
    # self.file.write("#include <ruby.h>")
    self.file.write("#include \"helpers.c\"\n")
>>>>>>> 90f860157deaaec63e50c2c1e3ff703d4656df14
#     self.file.write("""
# #include <ruby.h>
# #include \"helpers.c\"
# int error;
# int main ( int argc, char ** argv) 	{
# 	ruby_init();
# 	rb_protect( run, 0, & error);// call our stuff rb_protect'ed
#  	ruby_finalize();
#  	return 0;
# }""")
<<<<<<< HEAD
=======
    self.file.write("VALUE run(VALUE arg){\n")
    descend  interpretation, interpretation.root
    self.file.write("}")
    include="$RUBY_DEV_HOME/.ext/include/x86_64-darwin13.2.0/"
    `gcc -Iruby -I$RUBY_DEV_HOME/include -I#{include} -lruby emitted.c -o main`
    `./if do_run: main`

>>>>>>> 90f860157deaaec63e50c2c1e3ff703d4656df14
